import { __extends } from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordova } from '@ionic-native/core';
var ActionSheet = /** @class */ (function (_super) {
    __extends(ActionSheet, _super);
    function ActionSheet() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * Convenience property to select an Android theme value
         */
        _this.ANDROID_THEMES = {
            THEME_TRADITIONAL: 1,
            THEME_HOLO_DARK: 2,
            THEME_HOLO_LIGHT: 3,
            THEME_DEVICE_DEFAULT_DARK: 4,
            THEME_DEVICE_DEFAULT_LIGHT: 5,
        };
        return _this;
    }
    ActionSheet.prototype.show = function (options) { return cordova(this, "show", {}, arguments); };
    ActionSheet.prototype.hide = function (options) { return cordova(this, "hide", {}, arguments); };
    ActionSheet.pluginName = "ActionSheet";
    ActionSheet.plugin = "cordova-plugin-actionsheet";
    ActionSheet.pluginRef = "plugins.actionsheet";
    ActionSheet.repo = "https://github.com/EddyVerbruggen/cordova-plugin-actionsheet";
    ActionSheet.platforms = ["Android", "Browser", "iOS", "Windows", "Windows Phone 8"];
    ActionSheet.decorators = [
        { type: Injectable }
    ];
    return ActionSheet;
}(IonicNativePlugin));
export { ActionSheet };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL2FjdGlvbi1zaGVldC9uZ3gvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyw4QkFBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUFpR3ZDLCtCQUFpQjs7O1FBQ2hEOztXQUVHO1FBQ0gsb0JBQWMsR0FNVjtZQUNGLGlCQUFpQixFQUFFLENBQUM7WUFDcEIsZUFBZSxFQUFFLENBQUM7WUFDbEIsZ0JBQWdCLEVBQUUsQ0FBQztZQUNuQix5QkFBeUIsRUFBRSxDQUFDO1lBQzVCLDBCQUEwQixFQUFFLENBQUM7U0FDOUIsQ0FBQzs7O0lBU0YsMEJBQUksYUFBQyxPQUE0QjtJQVVqQywwQkFBSSxhQUFDLE9BQTRCOzs7Ozs7O2dCQXBDbEMsVUFBVTs7c0JBakdYO0VBa0dpQyxpQkFBaUI7U0FBckMsV0FBVyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEFjdGlvblNoZWV0T3B0aW9ucyB7XG4gIC8qKlxuICAgKiBUaGUgbGFiZWxzIGZvciB0aGUgYnV0dG9ucy4gVXNlcyB0aGUgaW5kZXggeFxuICAgKi9cbiAgYnV0dG9uTGFiZWxzOiBzdHJpbmdbXTtcblxuICAvKipcbiAgICogVGhlIHRpdGxlIGZvciB0aGUgYWN0aW9uc2hlZXRcbiAgICovXG4gIHRpdGxlPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUaGUgc3VidGl0bGUgZm9yIHRoZSBhY3Rpb25zaGVldCAoSU9TIG9ubHkpXG4gICAqL1xuICBzdWJ0aXRsZT86IHN0cmluZztcblxuICAvKipcbiAgICogVGhlbWUgdG8gYmUgdXNlZCBvbiBBbmRyb2lkXG4gICAqL1xuICBhbmRyb2lkVGhlbWU/OiAxIHwgMiB8IDMgfCA0IHwgNTtcblxuICAvKipcbiAgICogRW5hYmxlIGEgY2FuY2VsIG9uIEFuZHJvaWRcbiAgICovXG4gIGFuZHJvaWRFbmFibGVDYW5jZWxCdXR0b24/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBFbmFibGUgYSBjYW5jZWwgb24gV2luZG93cyBQaG9uZVxuICAgKi9cbiAgd2lucGhvbmVFbmFibGVDYW5jZWxCdXR0b24/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBBZGQgYSBjYW5jZWwgYnV0dG9uIHdpdGggdGV4dFxuICAgKi9cbiAgYWRkQ2FuY2VsQnV0dG9uV2l0aExhYmVsPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBBZGQgYSBkZXN0cnVjdGl2ZSBidXR0b24gd2l0aCB0ZXh0XG4gICAqL1xuICBhZGREZXN0cnVjdGl2ZUJ1dHRvbldpdGhMYWJlbD86IHN0cmluZztcblxuICAvKipcbiAgICogT24gYW4gaVBhZCwgc2V0IHRoZSBYLFkgcG9zaXRpb25cbiAgICovXG4gIHBvc2l0aW9uPzogW251bWJlciwgbnVtYmVyXTtcblxuICAvKipcbiAgICogQ2hvb3NlIGlmIGRlc3RydWN0aXZlIGJ1dHRvbiB3aWxsIGJlIHRoZSBsYXN0XG4gICAqL1xuICBkZXN0cnVjdGl2ZUJ1dHRvbkxhc3Q/OiBib29sZWFuO1xufVxuXG4vKipcbiAqIEBuYW1lIEFjdGlvbiBTaGVldFxuICogQGRlc2NyaXB0aW9uXG4gKiBUaGUgQWN0aW9uU2hlZXQgcGx1Z2luIHNob3dzIGEgbmF0aXZlIGxpc3Qgb2Ygb3B0aW9ucyB0aGUgdXNlciBjYW4gY2hvb3NlIGZyb20uXG4gKlxuICogUmVxdWlyZXMgQ29yZG92YSBwbHVnaW46IGBjb3Jkb3ZhLXBsdWdpbi1hY3Rpb25zaGVldGAuIEZvciBtb3JlIGluZm8sIHBsZWFzZSBzZWUgdGhlIFtBY3Rpb25TaGVldCBwbHVnaW4gZG9jc10oaHR0cHM6Ly9naXRodWIuY29tL0VkZHlWZXJicnVnZ2VuL2NvcmRvdmEtcGx1Z2luLWFjdGlvbnNoZWV0KS5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IEFjdGlvblNoZWV0LCBBY3Rpb25TaGVldE9wdGlvbnMgfSBmcm9tICdAaW9uaWMtbmF0aXZlL2FjdGlvbi1zaGVldC9uZ3gnO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgYWN0aW9uU2hlZXQ6IEFjdGlvblNoZWV0KSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKlxuICogbGV0IGJ1dHRvbkxhYmVscyA9IFsnU2hhcmUgdmlhIEZhY2Vib29rJywgJ1NoYXJlIHZpYSBUd2l0dGVyJ107XG4gKlxuICogY29uc3Qgb3B0aW9uczogQWN0aW9uU2hlZXRPcHRpb25zID0ge1xuICogICB0aXRsZTogJ1doYXQgZG8geW91IHdhbnQgd2l0aCB0aGlzIGltYWdlPycsXG4gKiAgIHN1YnRpdGxlOiAnQ2hvb3NlIGFuIGFjdGlvbicsXG4gKiAgIGJ1dHRvbkxhYmVsczogYnV0dG9uTGFiZWxzLFxuICogICBhZGRDYW5jZWxCdXR0b25XaXRoTGFiZWw6ICdDYW5jZWwnLFxuICogICBhZGREZXN0cnVjdGl2ZUJ1dHRvbldpdGhMYWJlbDogJ0RlbGV0ZScsXG4gKiAgIGFuZHJvaWRUaGVtZTogdGhpcy5hY3Rpb25TaGVldC5BTkRST0lEX1RIRU1FUy5USEVNRV9IT0xPX0RBUkssXG4gKiAgIGRlc3RydWN0aXZlQnV0dG9uTGFzdDogdHJ1ZVxuICogfVxuICpcbiAqIHRoaXMuYWN0aW9uU2hlZXQuc2hvdyhvcHRpb25zKS50aGVuKChidXR0b25JbmRleDogbnVtYmVyKSA9PiB7XG4gKiAgIGNvbnNvbGUubG9nKCdCdXR0b24gcHJlc3NlZDogJyArIGJ1dHRvbkluZGV4KTtcbiAqIH0pO1xuICogYGBgXG4gKiBAaW50ZXJmYWNlc1xuICogQWN0aW9uU2hlZXRPcHRpb25zXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnQWN0aW9uU2hlZXQnLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1hY3Rpb25zaGVldCcsXG4gIHBsdWdpblJlZjogJ3BsdWdpbnMuYWN0aW9uc2hlZXQnLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL0VkZHlWZXJicnVnZ2VuL2NvcmRvdmEtcGx1Z2luLWFjdGlvbnNoZWV0JyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnQnJvd3NlcicsICdpT1MnLCAnV2luZG93cycsICdXaW5kb3dzIFBob25lIDgnXSxcbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQWN0aW9uU2hlZXQgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG4gIC8qKlxuICAgKiBDb252ZW5pZW5jZSBwcm9wZXJ0eSB0byBzZWxlY3QgYW4gQW5kcm9pZCB0aGVtZSB2YWx1ZVxuICAgKi9cbiAgQU5EUk9JRF9USEVNRVM6IHtcbiAgICBUSEVNRV9UUkFESVRJT05BTDogbnVtYmVyO1xuICAgIFRIRU1FX0hPTE9fREFSSzogbnVtYmVyO1xuICAgIFRIRU1FX0hPTE9fTElHSFQ6IG51bWJlcjtcbiAgICBUSEVNRV9ERVZJQ0VfREVGQVVMVF9EQVJLOiBudW1iZXI7XG4gICAgVEhFTUVfREVWSUNFX0RFRkFVTFRfTElHSFQ6IG51bWJlcjtcbiAgfSA9IHtcbiAgICBUSEVNRV9UUkFESVRJT05BTDogMSxcbiAgICBUSEVNRV9IT0xPX0RBUks6IDIsXG4gICAgVEhFTUVfSE9MT19MSUdIVDogMyxcbiAgICBUSEVNRV9ERVZJQ0VfREVGQVVMVF9EQVJLOiA0LFxuICAgIFRIRU1FX0RFVklDRV9ERUZBVUxUX0xJR0hUOiA1LFxuICB9O1xuXG4gIC8qKlxuICAgKiBTaG93IGEgbmF0aXZlIEFjdGlvblNoZWV0IGNvbXBvbmVudC4gU2VlIGJlbG93IGZvciBvcHRpb25zLlxuICAgKiBAcGFyYW0ge0FjdGlvblNoZWV0T3B0aW9uc30gW29wdGlvbnNdIE9wdGlvbnMgU2VlIHRhYmxlIGJlbG93XG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCB0aGUgaW5kZXggb2YgdGhlXG4gICAqICAgYnV0dG9uIHByZXNzZWQgKDEgYmFzZWQsIHNvIDEsIDIsIDMsIGV0Yy4pXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHNob3cob3B0aW9ucz86IEFjdGlvblNoZWV0T3B0aW9ucyk6IFByb21pc2U8bnVtYmVyPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFByb2dyYW1tYXRpY2FsbHkgaGlkZSB0aGUgbmF0aXZlIEFjdGlvblNoZWV0XG4gICAqIEBwYXJhbSAge0FjdGlvblNoZWV0T3B0aW9uc30gW29wdGlvbnNdIE9wdGlvbnMgU2VlIHRhYmxlIGJlbG93XG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2hlbiB0aGUgYWN0aW9uc2hlZXQgaXMgY2xvc2VkXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGhpZGUob3B0aW9ucz86IEFjdGlvblNoZWV0T3B0aW9ucyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG59XG4iXX0=